---
title: 'Project 2: Modeling, Testing, and Predicting'
author: "SDS348"
date: ''
output:
  html_document:
    toc: yes
    toc_float:
      collapsed: no
      smooth_scroll: yes

---

```{r setup, include=FALSE}
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
  # this hook is used only when the linewidth option is not NULL
  if (!is.null(n <- options$linewidth)) {
    x = knitr:::split_lines(x)
    # any lines wider than n should be wrapped
    if (any(nchar(x) > n)) x = strwrap(x, width = n)
    x = paste(x, collapse = '\n')
  }
  hook_output(x, options)
})

knitr::opts_chunk$set(echo = TRUE, eval = TRUE,fig.align="center",warning=FALSE,message=FALSE,fig.width=8, fig.height=5, linewidth=60)
options(tibble.width = 100,width = 100)
library(tidyverse)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
##Introduction
```{R}
#For this project, I have chosen to look at an avengers dataset because I absolutely love marvel! This dataset is very complex and contains the character name, how many times the character has appeared throughout the films, the amount of time the character has been in the avengers,the year they were introduced, and deaths. There are a total of 173 observations and 21 variables in the dataset.
```

##Question 1
```{R}
avengers_csv <-read.csv('avengers_csv.csv')

# preforming a Manova with appearances and years since joining and gender

man1<-manova(cbind(appearances,`years.since.joining`)~`gender`, data=avengers_csv)
summary(man1)
#getting the mean difference
summary.aov(man1) 
avengers_csv%>%group_by(gender)%>%summarize(mean(`years.since.joining`),mean(appearances))
#t.test ask for help here
pairwise.t.test(avengers_csv$`years.since.joining`,avengers_csv$gender, p.adj="none")
pairwise.t.test(avengers_csv$appearances,avengers_csv$gender, p.adj="none")

#Answers
#According to the MANVOA assumptions, my data did certain independent samples but did not contain homogeneity within group variance matrices.MOst likely the majority of the MANOVA assumptions were not met with my dataset. I have calculated one MANOVA test, preformed 2 ANOVA test, and 6 t test to make a total of 9. The bonferri correction is my .05/9= .0056, so with correction, my data is not significant.
```

##Question 2
```{R}
# Randomization Testing: 
bop<-lm(appearances~.,data=avengers_csv) #predict appearances from all other variables
yhat<-predict(bop) 
mean((avengers_csv$appearances-yhat)^2) 
#correlation
cor(avengers_csv$appearances,avengers_csv$years.since.joining)
cor.test(avengers_csv$appearances,avengers_csv$years.since.joining)
#The null hypothesis is that there is no correlation between the number of appearances and years since joining. The alternative hypothesis is that their is a correlation between appearances and years since joining.The correlation is .06 which is quiet small and when I preformed the cor.test, this was confirmed since the p-value is quiet large, the relationship between the two variables is not significant. 
#plots
ggplot(data=avengers_csv,aes(x=years.since.joining,y=appearances)) + geom_point()
plot(avengers_csv$appearances)
plot(avengers_csv$years.since.joining)
t.test(avengers_csv$appearances)
t.test(avengers_csv$years.since.joining)
```
##Question 3
```{R}
library(lmtest)
library(sandwich)
#Linear Regression Model
avengers_csv
grl <- lm(`years.since.joining`~`appearances`, data = avengers_csv)
coef(grl)
#the coefficient estimates tell us that for every year since joining the appearances number increases .003.
#***help! how do I interpret this?
cov(avengers_csv$years.since.joining, avengers_csv$appearances)/var(avengers_csv$years.since.joining)
#plotting the regression
avengers_csv%>%ggplot(aes(x=years.since.joining,y=appearances))+geom_point()+geom_smooth(method ='lm',se=F)
SST <- sum((avengers_csv$appearances-mean(avengers_csv$appearances))^2) #SS Total
SSR <- sum((grl$fitted.values-mean(avengers_csv$appearances))^2) #SS Regress
SSE <- sum(grl$residuals^2) #SS Error
SSR/SST
#The model explains 25.3 percent of the variation, this is the value of the intercept.
#with robust standard errors,re-computing the regression
coeftest(grl, vcov=vcovHC(grl))[,1:2]
#checking for normailty
resids<-lm(avengers_csv$appearances~avengers_csv$years.since.joining, data=avengers_csv)$residuals
ggplot()+geom_histogram(aes(resids),bins=10)
fitted<-lm(avengers_csv$appearances~avengers_csv$years.since.joining, data=avengers_csv)$fitted.values
ggplot()+geom_point(aes(fitted,resids))

```
##Question 4
```{R}
avengers_csv
newavg <- na.omit(avengers_csv)
grls <- lm(appearances~`years.since.joining`, data = newavg)
coef(grl)
#resampling
boot_dat<- sample_frac(newavg, replace=T)
samp_distn<-replicate(5000, {
boot_dat <- sample_frac(newavg, replace=T) #take bootstrap sample of rows
fit <- lm(appearances~years.since.joining+gender, data=avengers_csv) #fit model on bootstrap sample
coef(fit) #save coefs
})
## Estimated SEs
samp_distn %>% t %>% as.data.frame %>% summarize_all(sd)
```
##Question 5
```{R}
#Logistic Regression Model and Binary Variable
ngrl<-avengers_csv%>%mutate(y=ifelse(current.=="yes",1,0))
head(ngrl)
ggrl<-glm(y~gender,data=ngrl, family=binomial)
summary(ggrl)
#Confusion Matrix
table(truth=avengers_csv$current., prediction=avengers_csv$gender)%>%addmargins
#accuracy, Sensitivity, etc.
(29+53)/173 #accuracy
29/91 #
sensitivity <- 53/82 #sensitivity 
29/58 #specificity
#plotting
library(plotROC)
ROCplot<-ggplot(ngrl)+geom_roc(aes(d=y,m=ngrl$appearances), n.cuts=0)
ROCplot
calc_auc(ROCplot)

coeftest(ggrl)
ggrl
coef(ggrl)%>%round(5)%>%data.frame

class_diag<-function(probs,truth){
        
        tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
        acc=sum(diag(tab))/sum(tab)
        sens=tab[2,2]/colSums(tab)[2]
        spec=tab[1,1]/colSums(tab)[1]
        ppv=tab[2,2]/rowSums(tab)[2]
        
        if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE) truth<-as.numeric(truth)-1
        
        #CALCULATE EXACT AUC
        ord<-order(probs, decreasing=TRUE)
        probs <- probs[ord]; truth <- truth[ord]
        
        TPR=cumsum(truth)/max(1,sum(truth)) 
        FPR=cumsum(!truth)/max(1,sum(!truth))
        
        dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
        TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
        
        n <- length(TPR)
        auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )
        
        data.frame(acc,sens,spec,ppv,auc)
      }
    #  class_diag(predict(fit,type='response'),avengers_csv$appearances)
# the auc value is low meaning it is hard to predict if the character is current or not by the number of appearances.
```
##Question 6
```{R}
fit <- glm(y~., data=ngrl)
#making the confusion matrix
probs<-predict(fit,type="response") 
table(predict=as.numeric(probs>.5),truth=ngrl$y)%>%addmargins
# Classification Diagnostics
82/82 
91/91 
82/82 
# repeats
ranks<-replicate(5000,{
rand_pos<-sample(ngrl[ngrl$y==1,]$prob)
rand_neg<-sample(ngrl[ngrl$y==0,]$prob)
case_when(rand_pos > rand_neg ~ 1, rand_pos == rand_neg ~ .5, rand_pos<rand_neg ~ 0)
})
mean(ranks) 
#calc auc/roc
ROCplot1<- ggplot(ngrl)+geom_roc(aes(d=y,m=ngrl$prob), n.cuts=0)
ROCplot1
calc_auc(ROCplot1)
#the auc value is also pretty low here, meaning it is hard to predict the current of the character.
#LASSO
newgrl <- ngrl %>% select(-notes,-url,-death4,-return4,-death5,-return5)
library(glmnet)
z<-as.matrix(newgrl$current.) #grab response
x<-model.matrix(current.~.,data=newgrl)[,-1] #grab predictors
head(x)
cv<-cv.glmnet(x,newgrl$y)
lasso1<-glmnet(x,newgrl$y,lambda=cv$lambda.1se)
coef(lasso1)
#cv with lasso
set.seed(1234)
k=5 #choose number of folds
data1<-mtcars[sample(nrow(mtcars)),] #randomly order rows
folds<-cut(seq(1:nrow(mtcars)),breaks=k,labels=F) #create folds
diags<-NULL
for(i in 1:k){
train<-data1[folds!=i,]
test<-data1[folds==i,]
fit<-lm(mpg~cyl+hp+wt,data=train)
yhat<-predict(fit,newdata=test)
diags[i]<-mean((test$mpg-yhat)^2)
}
mean(diags)
# The amount of error is much better/ less with using only the varibales the lasso predicted! This is logical since the whole point of the lasso model is to look at the variable that really matter and decrease the amount of error.
```
## Modeling
```{r cars}
summary(cars)
```
You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
